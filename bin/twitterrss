#!/usr/bin/perl

use strict;
use warnings;

use Net::Twitter::Lite::WithAPIv1_1;
use Scalar::Util 'blessed';
use Try::Tiny;
use YAML::Tiny;
use XML::FeedPP;
use Date::Parse qw(str2time);
use Regexp::Common qw /URI/;
use Sys::Syslog qw(:standard :macros);
use autodie;

our $VERSION = '0.01';

openlog('twitterrss','pid',LOG_USER);

my $feed = XML::FeedPP::RSS->new();

my $config_file = '/etc/twitterrss.conf';

my $config = YAML::Tiny->read($config_file)
  or die "Can't parse $config_file: $YAML::Tiny::errstr\n";

# we just need the first document
$config = $config->[0];

my $output_dir = $config->{output_dir};
die "Missing output directory in config file\n"
	unless $output_dir;
mkdir $output_dir;

my $nt = Net::Twitter::Lite::WithAPIv1_1->new(
      consumer_key        => $config->{consumer_key},
      consumer_secret     => $config->{consumer_secret},
      access_token        => $config->{token},
      access_token_secret => $config->{token_secret},
);

for my $user ( @{$config->{user}} ) {
   try {
      my $statuses = $nt->mentions;
      for my $status ( @$statuses ) { 
        my $text = $status->{text};

	my %url;
	if ( defined $status->{entities} ) {
		if ( defined $status->{entities}->{urls} ) {
			for my $url (@{$status->{entities}->{urls}}) {
				$url{$url->{url}} = $url;
			}
		}
		if ( defined $status->{entities}->{media} ) {
			for my $url (@{$status->{entities}->{media}}) {
				$url{$url->{url}} = $url;
			}
		}
	}

	if ( keys %url ) {
		$text =~ s($RE{URI}{HTTP}{-keep => 1})(
			exists $url{$1}
                        ? qq{<a href="$url{$1}->{expanded_url}">$url{$1}->{display_url}</a>}
                        : $1
                )xeg;
        }

	$text =~ s{#([[:alnum:]]+)}{<a href="http://twitter.com/search?q=%23$1">#$1</a>}g;
	$text =~ s{@([A-Za-z0-9_]{1,15})}{<a href="http://twitter.com/$1">\@$1</a>}g;

	my $pubDate = str2time($status->{created_at});
	my $item = $feed->add_item(
		description => \$text,
		pubDate => $pubDate,
		author => $status->{user}->{screen_name},
        );
    my $image_url = $status->{user}->{profile_image_url};
    my ($type) = $image_url =~ /\.([^.]+?)$/;
    $item->set('enclosure@url' => $status->{user}->{profile_image_url});
    $item->set('enclosure@type' => "image/$type");
    $item->set('enclosure@length' => 0);
      }
      $feed->to_file($output_dir->child("$user.rss"));
  }
  catch {
      my $error = blessed $_ && $_->isa('Net::Twitter::Lite::Error') ? $_->error : $_;
      syslog(LOG_WARNING,$error);
  };
}

__END__

=pod

=head1 NAME

twitterrss - Convert mentions to a RSS feed

=head1 DESCRIPTION

twitterrss converts the 20 most recent mentions for the authenticating
user to a RSS feed. In the process URLs are expanded and profile images
are attached as media enclosures. 

=head1 CONFIGURATION

The scripts reads it's configuration from the YAML file I</etc/twitterrss.conf>.

  consumer_key: <YOUR_CONSUMER_KEY>
  consumer_secret: <YOUR_CONSUMER_SECRET>
  token: <YOUR_TOKEN>
  token_secret: <YOUR_TOKEN_SECRET>
  output_dir: /var/www/twitterrss/mentions/
  user:
    - <FIRST_USER>
    - <ANOTHER_USER>

For every user a file is written in I<$output_dir/$user.rss>.

=head1 INSTALLATION

It is possible to install this script via perl normal install routines. 

  perl Build.PL
  ./Build
  ./Build install

=head1 COPYRIGHT AND LICENSE

Copyright 2014 Mario Domgoergen C<< <mario@domgoergen.com> >>

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

=cut

